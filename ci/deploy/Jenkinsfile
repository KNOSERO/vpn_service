@Library('jenkins_shared_lib') _

pipeline {
    agent {
        label 'home'
    }
    options {
        skipDefaultCheckout();
        timestamps();
        ansiColor('xterm')
    }
    environment {
        CREDITS_ID = 'github-token'
    }

    stages {
        stage('Init ENV') {
            steps {
                script {
                    initEnv()
                }
            }
        }

        stage('Checkout') {
            steps {
                checkoutBranch("${env.BRANCH}")
            }
        }

        stage('Init') {
            parallel {
                stage('SSH key configuration') {
                    steps {
                        configureUserSSH()
                    }
                }

                stage('Init Submodules') {
                    steps {
                        script {
                            initSubmodules()
                        }
                    }
                }
            }
        }

        stage('Prepare Config') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'secret-file-vpn', variable: 'SECRET_FILE')]) {
                        sh """
                            cp "\$SECRET_FILE" ".env"
                        """
                    }
                    writeFile file: 'inventory.ini', text: params.CONFIG
                }
            }
        }

        stage('Run playbook Ansible') {
            environment {
                ANSIBLE_HOST_KEY_CHECKING = 'False'
            }
            steps {
                script {
                    def playbookPath = "playbook.yml"
                    sh "ansible-playbook -i inventory.ini ${playbookPath}"
                }
            }
        }
    }
}